<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//com.mybatis09.org//DTD Mapper 3.0//EN"
        "http://com.mybatis.org/dtd/com.mybatis-3-mapper.dtd">

<mapper namespace="com.batis.dao03.DepartmentMapper">

    <!--public Department getDeptById(Integer id);-->
    <select id="getDeptById" resultType="com.batis.bean03.Department">
        select id,dept_name departmentName from tbl_dept where id=#{id}
    </select>


    <!--collection 嵌套结果集的方式，定义关联的集合类型元素的封装规则-->

    <!--did  dept_name  eid  last_name  email  gender-->
    <resultMap id="MyDept" type="com.batis.bean03.Department">
        <id column="did" property="id"/>
        <result column="dept_name" property="departmentName"/>
        <!--collection:定义关联集合类型的属性的封装规则
            ofType:指定集合里面的元素的类型-->
        <collection property="emps" ofType="com.batis.bean03.Employee">
            <!--定义这个集合中元素的封装规则-->
            <id column="eid" property="id"/>
            <result column="last_name" property="lastName"/>
            <result column="email" property="email"/>
            <result column="gender" property="gender"/>
        </collection>
    </resultMap>
    <!-- public Department getDeptByIdPlus(Integer id);-->
    <select id="getDeptByIdPlus" resultMap="MyDept" >
        select d.id did,d.dept_name dept_name,
            e.id eid,e.last_name last_name,e.email email,e.gender gender
        from tbl_dept d
        left join tbl_employee e
        on d.id=e.d_id
        where d.id=#{id}
    </select>


    <resultMap id="MyDeptStep" type="com.batis.bean03.Department">
        <id column="id" property="id"/>
        <result column="dept_name" property="departmentName"/>
        <collection property="emps"
                    select="com.batis.dao03.EmployeeMapperPlus.getEmpsByDeptId"
                    column="deptId = id" fetchType="lazy">
        </collection>
    </resultMap>

    <!--public Department getDeptByIdStep(Integer id);-->
    <select id="getDeptByIdStep" resultMap="MyDeptStep">
        select id,dept_name from tbl_dept where id=#{id}
    </select>


    <!--扩展：多列的值传递过去；
              将多列的值封装map传递；
              column="{key1=column1,key2=column2}"
        fetchType="lazy":表示使用延迟加载；
            -lazy:延迟
            -eager：立即
        -->

</mapper>

